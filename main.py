import telebot
from telebot import types
import random
import time
import requests
import os
import ssl

token = '1543845399:AAGMq9rrQW7xSvgAPnXUjpjBNVfw6G1E9HA'
bot = telebot.TeleBot(token)
ADMIN_CHAT_ID = 641892529

chat_ids_file = 'chat_ids.txt'
auto_number = ''


service = telebot.types.ReplyKeyboardMarkup(True)
service.row('üîç –ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö', '‚öôÔ∏è –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã')
service.row('‚ÑπÔ∏è FAQ', 'üìà –ö–∞–Ω–∞–ª')

@bot.message_handler(commands = ['start'])
def welcome(message):	
	bot.send_message(message.chat.id, '6 7', reply_markup=service, parse_mode='Markdown')
        
@bot.message_handler(func=lambda message: True, content_types=['text'])
def any_msg(message):
    if message.text == "üîç –ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö":  
        keyboard = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text="üá∫üá¶ –£–∫—Ä–∞–∏–Ω–∞", callback_data="uabtn")
        btn2 = types.InlineKeyboardButton(text="üá∑üá∫ –†–æ—Å—Å–∏—è", callback_data="test")
        btn3 = types.InlineKeyboardButton(text="üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", callback_data="test")
        btn4 = types.InlineKeyboardButton(text="üáßüáæ –ë–µ–ª–∞—Ä—É—Å—å", callback_data="test")
        keyboard.add(btn1, btn2)
        keyboard.add(btn3, btn4)
        bot.send_message(message.chat.id, "üåê –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º —Å—Ç—Ä–∞–Ω—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö:", reply_markup=keyboard)

def car_ua():
        global auto_number
        auto_number = message.text
        marka = ''
        region = ''
        model = ''
        zametki = ''
        data_reg = ''
        response = requests.get('https://fakescreen-3d98a1.eu1.kinto.io/ua?num='+auto_number)
        data = response.json()
        region = data["region"]["name"]
        marka = data["vendor"]
        model = data["model"]
        zametki = data["operations"][0]["notes"]
        data_reg = data["operations"][0]["regAt"]
	
    if message.text == "üîç –ü–æ–∏—Å–∫ üöô":
        bot.send_message(message.chat.id, "üåê –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º —Å—Ç—Ä–∞–Ω—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö:" + data_reg + '666' + auto_number, reply_markup=keyboard)
        
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        if call.data == "uabtn":
            keyboard = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫ –∞–≤—Ç–æ –ø–æ –≥–æ—Å –Ω–æ–º–µ—Ä—É", callback_data="uabtn1_1")
            btn2 = types.InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞", callback_data="test")
            keyboard.add(btn1)
            keyboard.add(btn2)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üá∫üá¶ –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω—É–∂–Ω–æ–π –≤–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.", reply_markup=keyboard)  
	
        if call.data == "uabtn1_1":
            service1 = telebot.types.ReplyKeyboardMarkup(True)
            service1.row('üîç –ü–æ–∏—Å–∫ üöô', 'üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é')
            bot.send_message(chat_id=call.message.chat.id, text="üîç –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ –ø–æ –≥–æ—Å. –Ω–æ–º–µ—Ä—É:\n\n‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–º–µ—Ä –∞–≤—Ç–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –ø—Ä–∏–º–µ—Ä –Ω–æ–º–µ—Ä–∞ *AA1234BB.*", reply_markup=service1, parse_mode='Markdown')
	
        if call.data == "otherosint":
            keyboard = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton(text="üë• –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ñ–µ–π–∫ –¥–∞–Ω–Ω—ã—Ö", callback_data="otherosint_1")
            keyboard.add(btn1)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="‚öôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç.", reply_markup=keyboard)

        if call.data == "otherosint_1":
            keyboard = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton(text="üßë‚Äç –ñ–µ–Ω—Å–∫–∏–π", callback_data="otherosint_1_1")
            btn2 = types.InlineKeyboardButton(text="üë®‚Äç –ú—É–∂—Å–∫–æ–π", callback_data="otherosint_1_2")
            keyboard.add(btn1,btn2)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üë• –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ñ–µ–π–∫ –¥–∞–Ω–Ω—ã—Ö:\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –ø–æ–ª –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö.", reply_markup=keyboard)

        if call.data == "otherosint_1_1":
            url = "https://randomuser.me/api/"
            response = requests.get(url).json()
            gender = "male"
            name = response["results"][0]["name"]
            location = response["results"][0]["location"]
            birthday = response["results"][0]["dob"]
                        
            keyboard = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton(text="üßë‚Äç –ñ–µ–Ω—Å–∫–∏–π", callback_data="otherosint_1_1")
            btn2 = types.InlineKeyboardButton(text="üë®‚Äç –ú—É–∂—Å–∫–æ–π", callback_data="otherosint_1_2")
            keyboard.add(btn1,btn2)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üë• –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ñ–µ–π–∫ –¥–∞–Ω–Ω—ã—Ö:\n\n–í—ã–±–µ—Ä–∏—Ç–µ"+{birthday['date']}+" –Ω—É–∂–Ω—ã–π –≤–∞–º –ø–æ–ª –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö.", reply_markup=keyboard)

	
def start_spam(chat_id, uaautonumber, force):
    running_uaautonumber.append(chat_id)
        
bot.polling(none_stop=True)
